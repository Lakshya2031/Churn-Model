# -*- coding: utf-8 -*-
"""Untitled75.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Aqp0lb-GpeEXNWMqJRyaNOmDgkjf9hSj
"""

import streamlit as st
import pandas as pd
import pickle

# ========================
# Load saved model & transformer
# ========================
with open("rf_model.pkl", "rb") as f:
    model = pickle.load(f)

with open("transform.pkl", "rb") as f:
    transform = pickle.load(f)

# ========================
# Streamlit UI
# ========================
st.title("üìä Customer Churn Prediction App")

st.write("Fill in customer details below to predict churn (Yes/No).")

# Collect user input
gender = st.selectbox("Gender", ["Male", "Female"])
senior_citizen = st.selectbox("Senior Citizen", [0, 1])
partner = st.selectbox("Partner", ["Yes", "No"])
dependents = st.selectbox("Dependents", ["Yes", "No"])
tenure = st.number_input("Tenure (months)", min_value=0, max_value=100, value=1)
phone_service = st.selectbox("Phone Service", ["Yes", "No"])
multiple_lines = st.selectbox("Multiple Lines", ["Yes", "No"])
internet_service = st.selectbox("Internet Service", ["DSL", "Fiber optic", "No"])
online_security = st.selectbox("Online Security", ["Yes", "No"])
online_backup = st.selectbox("Online Backup", ["Yes", "No"])
device_protection = st.selectbox("Device Protection", ["Yes", "No"])
tech_support = st.selectbox("Tech Support", ["Yes", "No"])
streaming_tv = st.selectbox("Streaming TV", ["Yes", "No"])
streaming_movies = st.selectbox("Streaming Movies", ["Yes", "No"])
contract = st.selectbox("Contract", ["Month-to-month", "One year", "Two year"])
paperless_billing = st.selectbox("Paperless Billing", ["Yes", "No"])
payment_method = st.selectbox(
    "Payment Method",
    ["Electronic check", "Mailed check", "Bank transfer (automatic)", "Credit card (automatic)"]
)
monthly_charges = st.number_input("Monthly Charges", min_value=0.0, value=50.0)
total_charges = st.number_input("Total Charges", min_value=0.0, value=100.0)

# ========================
# Prepare DataFrame for prediction
# ========================
sample = {
    'gender': gender,
    'SeniorCitizen': senior_citizen,
    'Partner': partner,
    'Dependents': dependents,
    'tenure': tenure,
    'PhoneService': phone_service,
    'MultipleLines': multiple_lines,
    'InternetService': internet_service,
    'OnlineSecurity': online_security,
    'OnlineBackup': online_backup,
    'DeviceProtection': device_protection,
    'TechSupport': tech_support,
    'StreamingTV': streaming_tv,
    'StreamingMovies': streaming_movies,
    'Contract': contract,
    'PaperlessBilling': paperless_billing,
    'PaymentMethod': payment_method,
    'MonthlyCharges': monthly_charges,
    'TotalCharges': total_charges
}

df_sample = pd.DataFrame([sample])

# ========================
# Predict
# ========================
if st.button("üîç Predict Churn"):
    # transform input
    X_transformed = transform.transform(df_sample)

    # prediction
    pred = model.predict(X_transformed)[0]

    st.subheader("Prediction Result")
    if pred == 1:
        st.error("‚ö†Ô∏è This customer is likely to **Churn (Yes)**")
    else:
        st.success("‚úÖ This customer is likely to **Stay (No)**")


